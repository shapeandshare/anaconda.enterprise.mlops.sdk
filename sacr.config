[scripts]

###############################################################################
# Build
###############################################################################
clean = [
        "sacr clean dist .coverage coverage.xml htmlcov"
    ]
environment:export = "conda env export | grep -v \"^prefix: \" > environment.yml"
audit = []
prebuild = []
build = "conda build conda-recipe"

###############################################################################
# Linting
###############################################################################
lint = [
        "sacr run lint:pylint:check",
        "sacr run lint:isort:check",
        "sacr run lint:black:check"
    ]

lint:pylint:check = "pylint src"
lint:fix = "sacr run lint:isort:fix && sacr run lint:black:fix"

lint:isort:check = "isort --check --diff ."
lint:isort:fix = "isort ."

lint:black:fix = "black --line-length=120 --target-version=py310 ."
lint:black:check = "black --line-length=120 --target-version=py310 --check --diff ."


###############################################################################
# Tests and Coverage
###############################################################################
test = "sacr run test:integration && sacr run test:unit && sacr run coverage"
test:integration = "sacr run clean && sacr run build && sacr run install && python test/integration/setup.py && sacr run uninstall"
test:unit = "python test/unit/setup.py"
coverage = [
        "sacr run coverage:report",
        "sacr run coverage:report:html",
        "sacr run coverage:report:xml"
    ]
coverage:report = "coverage report"
coverage:report:html = "coverage html"
coverage:report:xml = "coverage xml"
